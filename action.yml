name: Manual CI - Test & Build

inputs:
  GITHUB_TOKEN:
    description: "GitHub token for authentication"
    required: true
  REPOSITORY_OWNER:
    description: "Owner of the repository"
    required: true
  UNIT_TESTS_COMMAND:
    description: "Command to run unit tests"
    required: true
  API_NAME:
    description: "Name of the API"
    required: true
  REPORT_PATH:
    description: "Path to the test report"
    required: true

runs: 

  using: "composite"

  steps:

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      shell: bash
      run: |
        pip install -r requirements.txt
        pip install coverage
        # install a fast modern linter
        pip install ruff

    - name: Run Python linter (ruff)
      shell: bash
      run: |
        # Run ruff to lint the repository. This step will fail the workflow on lint errors.
        ruff --version || pip install ruff
        ruff check . --extend-exclude tests

    - name: Run unit tests
      shell: bash
      run: ${{ inputs.UNIT_TESTS_COMMAND }}

    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      continue-on-error: true
      with:
        filename: coverage.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: "75 90"

    - name: Append coverage markdown to job summary
      if: success()
      shell: bash
      run: |
        # Append markdown coverage report to the GitHub Actions job summary if present
        if [ -f code-coverage-results.md ]; then
          echo "### Code coverage summary" >> "$GITHUB_STEP_SUMMARY"
          cat code-coverage-results.md >> "$GITHUB_STEP_SUMMARY"
        elif [ -f code-coverage-results.txt ]; then
          echo "### Code coverage summary (text)" >> "$GITHUB_STEP_SUMMARY"
          cat code-coverage-results.txt >> "$GITHUB_STEP_SUMMARY"
        else
          echo "No code coverage summary file found." >> "$GITHUB_STEP_SUMMARY"
        fi

    - name: Log in to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ inputs.REPOSITORY_OWNER }}
        password: ${{ inputs.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ghcr.io/llnabsll/${{ inputs.API_NAME }}/${{ inputs.API_NAME }}:1.0
